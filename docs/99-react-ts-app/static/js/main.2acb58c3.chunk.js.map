{"version":3,"sources":["Components/Counter.tsx","Components/Usuario.tsx","Components/Timer.tsx","Components/TimerParent.tsx","Components/CounterRed.tsx","Components/Formulario.tsx","hooks/useForm.tsx","App.tsx","index.tsx"],"names":["Counter","useState","counter","setCounter","incrementar","times","className","onClick","Usuario","user","setUser","uid","name","JSON","stringify","Timer","miliseconds","segundos","setSegundos","ref","useRef","useEffect","current","clearInterval","setInterval","s","TimerParent","milis","setMilis","initialState","contador","contadorReducer","state","action","type","payload","CounterRed","useReducer","contadorState","dispatch","Formulario","initState","formulario","setFormulario","handleChange","target","value","useForm","email","nombre","edad","autoComplete","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2acb58c3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nexport const Counter = () => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const incrementar = (times: number = 1): void => {\r\n        setCounter(counter+times);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h3>Counter: useState</h3>\r\n            <span>Valor: { counter }</span>\r\n            <br/>\r\n            <button className=\"btn btn-outline-primary mt-2\"\r\n                onClick={ () => incrementar() }>\r\n                +1\r\n            </button>\r\n            <button className=\"btn btn-outline-primary mt-2\"\r\n                onClick={ () => incrementar(2) }>\r\n                +2\r\n            </button>\r\n            \r\n            <button className=\"btn btn-outline-danger mt-2\"\r\n                onClick={ () => setCounter(0) }>\r\n                Reset\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const Usuario = () => {\r\n    const [user, setUser] = useState<User>();\r\n\r\n    const login = () => {\r\n        setUser({\r\n            uid:'XYZ888',\r\n            name: 'Christian Morante'\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h3>Usuario: useState</h3>\r\n            <button className=\"btn btn-outline-primary\" \r\n                onClick={ login }>\r\n                Login\r\n            </button>\r\n\r\n            {\r\n                (!user) \r\n                    ?  <pre>sin usuario</pre>\r\n                    : <pre>{ JSON.stringify(user) }</pre>\r\n            }\r\n\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ninterface User {\r\n    uid: string;\r\n    name: string;\r\n}","import { useEffect, useRef, useState } from \"react\";\r\n\r\ntype TimerArgs = {\r\n    miliseconds: number,\r\n    seconds?: number\r\n}\r\n\r\n\r\nexport const Timer = ({ miliseconds } : TimerArgs) => {\r\n\r\n    const [segundos, setSegundos] = useState(0);\r\n    const ref = useRef<NodeJS.Timeout>()\r\n\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n            clearInterval( ref.current );\r\n        } //ref.current && clearInterval( ref.current );\r\n        ref.current = setInterval( () => setSegundos( s => s + 1 ) , miliseconds);\r\n    }, [miliseconds]);\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h4>Timer: <small>{ segundos }</small></h4>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { Timer } from \"./Timer\"\r\n\r\n\r\nexport const TimerParent = () => {\r\n\r\n    const [milis, setMilis] = useState(1000);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <span>Milisegundos { milis }</span>\r\n            <br />\r\n\r\n            <button className=\"btn btn-outline-success\"\r\n                onClick={ () => setMilis(1000) }>\r\n                1000\r\n            </button>\r\n            <button className=\"btn btn-outline-success\"\r\n                onClick={ () => setMilis(2000) }>\r\n                2000\r\n            </button>\r\n\r\n            <Timer miliseconds={ milis } />\r\n        </>\r\n    )\r\n}\r\n","import { useReducer } from \"react\";\r\n\r\n\r\nconst initialState = {\r\n    contador: 10\r\n};\r\n\r\ntype ActionType = \r\n    | { type: 'incrementar' }\r\n    | { type: 'decrementar'}\r\n    | { type: 'custom', payload: number};\r\n\r\nconst contadorReducer = ( state: typeof initialState, action: ActionType ) => {\r\n    switch (action.type) {\r\n        case 'incrementar':\r\n            return {\r\n                ...state,\r\n                contador: state.contador +1\r\n            };\r\n        case 'decrementar':\r\n            return { \r\n                ...state,\r\n                contador: state.contador-1\r\n            };\r\n        case 'custom':\r\n            return {\r\n                ...state,\r\n                contador: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const CounterRed = () => {\r\n    const [contadorState, dispatch] = useReducer(contadorReducer, initialState)\r\n\r\n\r\n    return (\r\n        <>\r\n          <h2>Contador: { contadorState.contador }</h2>  \r\n          <button className=\"btn btn-primary\" onClick={ () => dispatch({type: 'incrementar'}) }>\r\n              +1\r\n          </button>\r\n          <button className=\"btn btn-primary\" onClick={ () => dispatch({type: 'incrementar'}) }>\r\n              -1\r\n          </button>\r\n          <button className=\"btn btn-primary\" onClick={ () => dispatch({type: 'incrementar'}) }>\r\n              100\r\n          </button>\r\n        </>\r\n    )   \r\n}\r\n","import { useForm } from '../hooks/useForm'\r\n\r\ninterface FormularioData {\r\n    email: string,\r\n    nombre: string,\r\n    edad: number\r\n}\r\n\r\nexport const Formulario = () => {\r\n    const { formulario, handleChange } = useForm<FormularioData>({ \r\n        email:'cmodev@gmail.com',\r\n        nombre:'Christian Morante',\r\n        edad: 55\r\n    });\r\n\r\n    const { email, nombre, edad } = formulario;\r\n\r\n    // const [formulario, setFormulario] = useState({\r\n    //     email: '',\r\n    //     nombre: ''\r\n    // });\r\n    // const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\r\n    //     const {name, value} = target;\r\n    //     //console.log('name:', name);\r\n    //     //console.log('value:', value);\r\n    //     setFormulario({\r\n    //         ...formulario,\r\n    //         [name]: value\r\n    //     });\r\n    // };\r\n\r\n\r\n    return (\r\n        <form autoComplete=\"off\">\r\n            <div className=\"mb-3\">\r\n                <label className=\"form-label\" >Email: </label>\r\n                <input type=\"email\" className=\"form-control\" name=\"email\"\r\n                    onChange={ handleChange }\r\n                    value={ email } />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n                <label className=\"form-label\" >Nombre: </label>\r\n                <input type=\"text\" className=\"form-control\" name=\"nombre\"\r\n                    onChange={ handleChange }\r\n                    value={ nombre } />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n                <label className=\"form-label\" >Edad: </label>\r\n                <input type=\"text\" className=\"form-control\" name=\"edad\"\r\n                    onChange={ handleChange }\r\n                    value={ edad } />\r\n            </div>\r\n\r\n            <pre> { JSON.stringify(formulario) } </pre>\r\n        </form>\r\n    )\r\n}\r\n","import { useState, ChangeEvent } from 'react'\r\n\r\n\r\n//export function useForm<T>(initState: T) {\r\nexport const useForm = <T extends Object>( initState: T ) => {\r\n\r\n    const [formulario, setFormulario] = useState(initState);\r\n\r\n    const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = target;\r\n        setFormulario({\r\n            ...formulario,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    return {\r\n        formulario, handleChange\r\n    };\r\n};","import { Counter } from \"./Components/Counter\";\r\nimport { Usuario } from \"./Components/Usuario\";\r\n\r\nimport { TimerParent } from \"./Components/TimerParent\";\r\nimport { CounterRed } from \"./Components/CounterRed\";\r\n\r\nimport { Formulario } from \"./Components/Formulario\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <h1>React + TS</h1>\r\n      <hr />\r\n\r\n      <h2>useState</h2>\r\n      <Counter />\r\n      <Usuario />\r\n      <br />\r\n      \r\n      <h2>useEffect - useRef</h2>\r\n      <hr />\r\n      <TimerParent />\r\n      <br />\r\n\r\n      <h2>useReducer</h2>\r\n      <hr />\r\n      <CounterRed />\r\n      <br />\r\n\r\n\r\n      <h2>custom Hooks</h2>\r\n      <hr/>\r\n      <Formulario />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}