{"version":3,"sources":["components/AddCategory.js","helpers/GifHelpers.js","components/GifItem.js","components/GifList.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","onSetCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","className","src","alt","GifList","loading","setGifs","useEffect","then","useFetchGifs","GifExpertApp","categories","setCategories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,mCACI,uBAAMC,SAhBO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAiB,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACzCN,EAAc,MAWZ,UACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAxBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,UAyBf,wBAAQD,KAAK,SAASI,QAbJ,WAC1Bd,EAAgB,IAChBG,EAAc,KAWN,yB,+BC/BHY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,wEAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAU,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAC1B,MAAwBf,mBAAS,CAC7BsB,KAAM,GACNa,SAAS,IAFb,mBAAOZ,EAAP,KAAaa,EAAb,KAoBA,OAfAC,qBAAW,WACPvB,EAASC,GAAWuB,MAAM,SAAAf,GACtBa,EAAQ,CACJd,KAAMC,EACNY,SAAS,SAIlB,CAACpB,IAOGQ,EDlBwBgB,CAAcxB,GAAhCQ,EAAb,EAAQD,KAAWa,EAAnB,EAAmBA,QAMnB,OACI,qCACI,oBAAIJ,UAAU,GAAd,SAAmBhB,IACjBoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,gBAAf,SAEQR,EAAKC,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAA4BA,GAAbA,EAAIC,aEf9Bc,EAAe,WAExB,MAAoCxC,mBAAS,CAAC,kBAA9C,mBAAOyC,EAAP,KAAmBC,EAAnB,KAOA,OACI,qCACI,iDACA,cAAE,EAAF,CAAc3C,gBAAkB2C,IAChC,uBAGA,6BAEQD,EAAWjB,KAAK,SAAAmB,GAAG,OACf,cAAC,EAAD,CAEI5B,SAAW4B,GADJA,Y,MClBnCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0a04a289.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ onSetCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n          onSetCategories( cats => [inputValue, ...cats]);\r\n          setInputValue('');\r\n        }\r\n    };\r\n\r\n    const handleClearCategories = () => {\r\n        onSetCategories([]);\r\n        setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <button type=\"button\" onClick={ handleClearCategories } >Clear</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    onSetCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=w5WMiAVIzy43geFknvNlz0h5b0lVeSz8&limit=10&offset=5`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    //console.log(gifs);\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"giftcard animate__animated animate__fadeIn\">\r\n            <img src={ url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifItem } from './GifItem';\r\n\r\nexport const GifList = ({ category }) => {\r\n    // const [images, setImages] = useState([]);\r\n    const { data:gifs, loading } = useFetchGifs( category );\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( gifs => setImages(gifs));\r\n    // }, [ category ]);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"\">{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"giftcard-grid\">\r\n                { \r\n                    gifs.map( img => \r\n                        <GifItem key={ img.id } {...img} />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/GifHelpers\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [gifs, setGifs] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs( category ).then( gifs => {\r\n            setGifs({\r\n                data: gifs,\r\n                loading: false\r\n            });\r\n            //setTimeout( () => { }, 1500);\r\n        });\r\n    }, [category]);\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( gifs => setImages(gifs));\r\n    // }, [ category ]);\r\n\r\n    return gifs; // { data:[], loading: true };\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifList } from './components/GifList';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['modern family']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories( ['Nueva Categoria',...categories] );\r\n    //     setCategories( cats => [...cats, 'Nueva Categoria']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift Expert App</h2>\r\n            < AddCategory onSetCategories={ setCategories } />\r\n            <hr />\r\n\r\n            {/* <button onClick={ handleAdd } >Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( cat => \r\n                        <GifList \r\n                            key= { cat }\r\n                            category={ cat } />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}